{"version":3,"file":"dynamic-analytics.mjs","sources":["../../../projects/dynamic-analytics/src/lib/dynamic-analytics/dynamic-analytics.service.ts","../../../projects/dynamic-analytics/src/public-api.ts","../../../projects/dynamic-analytics/src/dynamic-analytics.ts"],"sourcesContent":["import { HttpBackend, HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport * as _ from 'lodash';\r\nimport { of, Subject } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n\r\ntype VersionParameter = string | number | undefined;\r\n\r\nexport interface IEventConfig {\r\n  minVersion: VersionParameter; // Used (with maxVersion) to support multiple versions of a deployed application with the same config, and ensure we only track what we want, when we want it, and in which versions of the application.\r\n  maxVersion: VersionParameter;\r\n  events: DynamicEvent[];\r\n}\r\n\r\nexport interface IEventConfigDefinition {\r\n  configs: IEventConfig[];\r\n}\r\n\r\nexport type DynamicEvent =\r\n  IDynamicEventWithEventAction |\r\n  IDynamicEventWithSelector |\r\n  ITimedEvent |\r\n  IMouseEvent |\r\n  IKeyboardEvent |\r\n  IBeforeUnloadEvent |\r\n  ISequence;\r\n\r\nexport enum DynamicType {\r\n  Simple, // Standalone events. Trackable.\r\n  Sequence, // Complex events. Trigger multiple \"SequenceEvents\" first to trigger a \"Sequence\". Sequences may also be used to trigger other sequences. Trackable (optional).\r\n  SequenceEvent, // Similar to a \"Simple\" event but used as one step of a \"Sequence\". May optionally fire an analytics event when triggered. Not trackable.\r\n}\r\n\r\nexport enum MiscellaneousEventAction {\r\n  Beforeunload = 'beforeunload', // Can be used to finalize a sequence. e.g. \"Fire an event when the user begins to create some new data, but closes the browser without saving their changes\". Trackable.\r\n  Timed = 'timed' // Must only be used in a sequence, either to progress the sequence after some time, or to trigger a sequence cancellation event. Not trackable.\r\n}\r\n\r\nexport enum MouseEventAction {\r\n  Click = 'click',\r\n  MouseOver = 'mouseover',\r\n  MouseOut = 'mouseout',\r\n  MouseDown = 'mousedown',\r\n  MouseUp = 'mouseup',\r\n}\r\n\r\nexport enum KeyboardEventAction {\r\n  KeyPress = 'keypress',\r\n  KeyDown = 'keydown',\r\n  KeyUp = 'keyup',\r\n}\r\n\r\nexport type EventAction =\r\n  MiscellaneousEventAction |\r\n  MouseEventAction |\r\n  KeyboardEventAction\r\n\r\ninterface IDynamicEventBase {\r\n  id: number;\r\n  dynamicType: DynamicType;\r\n  message: string;\r\n  additionalDataSelector?: string; // Optional. Used to fetch additional data from the DOM. Will attempt to grab an input value if possible.\r\n  additionalData?: string; // Do not include with event config. This will be filled in when the event fires, if the additionalDataSelector is defined and evaluates to anything.\r\n}\r\n\r\nexport interface IDynamicEventWithEventAction extends IDynamicEventBase {\r\n  eventAction: EventAction;\r\n}\r\n\r\nexport interface IDynamicEventWithSelector extends IDynamicEventWithEventAction {\r\n  selector: string; // DOM/CSS selector used to trigger the event\r\n  statusSelector?: string; // Optional. Used to determine, at event time, whether the event is valid. e.g. \"Fire event X by clicking on button Y, but only if element Z is visible and enabled\"\r\n}\r\n\r\ninterface ISimpleEvent extends IDynamicEventWithSelector {\r\n  dynamicType: DynamicType.Simple;\r\n}\r\n\r\ninterface ISequenceEvent extends IDynamicEventWithSelector {\r\n  dynamicType: DynamicType.SequenceEvent;\r\n  additionalDataSelector: undefined; // Sequence events are not tracked.\r\n}\r\n\r\ninterface ITimedEvent extends IDynamicEventWithEventAction {\r\n  dynamicType: DynamicType.SequenceEvent | DynamicType.Simple;\r\n  eventAction: MiscellaneousEventAction.Timed;\r\n  selector: undefined;\r\n  timeout: number;\r\n}\r\n\r\ninterface IMouseEvent extends IDynamicEventWithEventAction {\r\n  dynamicType: DynamicType.SequenceEvent | DynamicType.Simple;\r\n  eventAction: MouseEventAction;\r\n  selector: string;\r\n}\r\n\r\ninterface IKeyboardEvent extends IDynamicEventWithEventAction {\r\n  dynamicType: DynamicType.SequenceEvent | DynamicType.Simple;\r\n  eventAction: KeyboardEventAction;\r\n  selector: string;\r\n  isAlphaNumeric: boolean;\r\n}\r\n\r\ninterface IBeforeUnloadEvent extends IDynamicEventWithEventAction {\r\n  dynamicType: DynamicType.SequenceEvent | DynamicType.Simple;\r\n  eventAction: MiscellaneousEventAction.Beforeunload;\r\n  selector: string;\r\n}\r\n\r\ninterface ISequence extends IDynamicEventBase {\r\n  dynamicType: DynamicType.Sequence;\r\n  sequenceEvents: number[]; // Ids corresponding to events that continue a sequence.\r\n  cancelEvents: number[]; // Ids corresponding to events that will trigger the cancellation of a sequence.\r\n  isTrackable: boolean; // Sequences are intended to chain together other events or sequences. Whether the completion of a sequence itself isTrackable or not is optional. If this is set to false, the sequence should contain at least 1 simple event or chain with another, trackable sequence.\r\n}\r\n\r\ninterface IDynamicEventWithHandler {\r\n  dynamicEvent: IDynamicEventWithSelector;\r\n  eventHandler: (event?: Event) => void;\r\n}\r\n\r\ninterface IEventRecord {\r\n  element: Element,\r\n  eventsWithHandlers: IDynamicEventWithHandler[]\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DynamicAnalyticsService {\r\n  readonly onEvent = new Subject<DynamicEvent>();\r\n  private versionFilterPredicate!: (minVersion: VersionParameter, maxVersion: VersionParameter) => boolean;\r\n  private httpClient: HttpClient;\r\n  private eventRecords: IEventRecord[] = [];\r\n  loggingEnabled = false;\r\n\r\n  constructor(httpBackend: HttpBackend) {\r\n    this.httpClient = new HttpClient(httpBackend);\r\n    this.observer = new MutationObserver(() => this.domChanged$.next());\r\n\r\n    /*\r\n    Test cases:\r\n    - Click events / Simple event\r\n\r\n    - Click X, then Y event / Sequence\r\n    - Mouse-over, then mouse-out without clicking inside event / Sequence with cancel event\r\n    - Click X (to open), then click Y to close without clicking Z events / Sequence with cancel event\r\n\r\n    - Count number of times event X has been fired this session?\r\n\r\n    - Window closed event. Use to submit values gathered using sequences, or event totals during a session. \"How many times did sequence/event X happen in the session\"\r\n    - Hourly/Minutely events to send totals during the last hour/minute\r\n    -\r\n    - Get a specific value from the DOM when firing an event (run arbitrary JS? Or just inspect DOM info?)\r\n    */\r\n\r\n    // this.eventConfigDefinition = {\r\n    //   configs: [\r\n    //     {\r\n    //       minVersion: '',\r\n    //       maxVersion: '',\r\n    //       events: [\r\n    //         // Simple click event\r\n    //         {id: 1, dynamicType: DynamicType.SequenceEvent, selector: '.toolbar-container > button', eventType: EventType.Click, message: 'Click ellipsis menu'},\r\n    //         {id: 2, dynamicType: DynamicType.SequenceEvent, selector: '.mat-mdc-menu-content button:nth-child(1)', eventType: EventType.Click, message: 'Click New Operation'},\r\n    //         {id: 3, dynamicType: DynamicType.SequenceEvent, selector: '.mat-mdc-menu-content button:nth-child(2)', eventType: EventType.Click, message: 'Click Location Wizard'},\r\n    //         {id: 4, dynamicType: DynamicType.SequenceEvent, selector: '.cdk-overlay-backdrop', eventType: EventType.Click, message: 'Click anywhere (other than sequence element(s))'},\r\n    //         // {id: 4, dynamicType: DynamicType.SequenceEvent, selector: 'document', eventType: EventType.Click, message: 'Click anywhere (other than sequence element(s))'},\r\n    //         {id: 5, dynamicType: DynamicType.Sequence, message: 'Click rating points icon', sequenceEvents: [1, 3], cancelEvents: [2, 4], isTrackable: true},\r\n    //       ]\r\n    //     }\r\n    //   ]\r\n    // };\r\n    // this.log(JSON.stringify(this.eventConfigDefinition));\r\n  }\r\n\r\n  private readonly domChanged$ = new Subject<void>();\r\n  private readonly observer: MutationObserver;\r\n  private readonly sequenceTracker: any = {};\r\n  private readonly timedEventForSequenceTracker: any = {};\r\n  private readonly blockedSequenceIds: number[] = [];\r\n  private filteredEvents: DynamicEvent[] = [];\r\n  private documentConfigListeners!: Function[];\r\n  private beforeUnloadConfigListeners!: Function[];\r\n\r\n  private onDomChanged = _.debounce(() => {\r\n    _.each(this.filteredEvents, dynamicEvent => {\r\n      if (this.isDynamicEventWithSelector(dynamicEvent) && dynamicEvent.selector !== 'document') {\r\n        const elements = document.querySelectorAll(dynamicEvent.selector);\r\n        _.each(elements, element => {\r\n          if (!this.hasEventListener(element, dynamicEvent)) {\r\n            this.addEventListener(element, dynamicEvent);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    this.cleanupEventRecords();\r\n  }, 100);\r\n\r\n  initialize(url: string, versionFilterPredicate: (minVersion: VersionParameter, maxVersion: VersionParameter) => boolean) {\r\n    this.versionFilterPredicate = versionFilterPredicate;\r\n    this.initializeAnalyticsConfiguration(url);\r\n    this.initializeMutationObserver();\r\n  }\r\n\r\n  initializeWithConfig(eventConfigDefinition: IEventConfigDefinition, versionFilterPredicate: (minVersion: VersionParameter, maxVersion: VersionParameter) => boolean) {\r\n    this.versionFilterPredicate = versionFilterPredicate;\r\n    this.initializeEventConfigDefinition(eventConfigDefinition);\r\n    this.initializeMutationObserver();\r\n  }\r\n\r\n  private initializeMutationObserver() {\r\n    const rootElement = document.getElementsByTagName('html')[0];\r\n    const mutationObserverConfig = {attributes: false, childList: true, subtree: true};\r\n    this.observer.observe(rootElement, mutationObserverConfig);\r\n  }\r\n\r\n  private initializeAnalyticsConfiguration(url: string) {\r\n    this.getConfiguration$(url).subscribe(eventConfigDefinition => this.initializeEventConfigDefinition(eventConfigDefinition));\r\n  }\r\n\r\n  private initializeEventConfigDefinition(eventConfigDefinition: IEventConfigDefinition | undefined) {\r\n    if (_.isEmpty(eventConfigDefinition?.configs)) {\r\n      console.warn('No analytics configuration found');\r\n      return;\r\n    }\r\n\r\n    this.validateEventConfigDefinition(eventConfigDefinition!);\r\n    _.each(eventConfigDefinition!.configs, config => {\r\n      if (this.versionFilterPredicate(config.minVersion, config.maxVersion)) {\r\n        this.filteredEvents = this.filteredEvents.concat(config.events);\r\n      }\r\n    });\r\n\r\n    if (_.isEmpty(this.filteredEvents)) {\r\n      console.warn('No analytics events found for this application version');\r\n      return;\r\n    }\r\n\r\n    this.domChanged$.subscribe(() => this.onDomChanged());\r\n    this.onDomChanged();\r\n\r\n    const documentConfigs = _.filter(this.filteredEvents,\r\n      dynamicEvent => this.isDynamicEventWithSelector(dynamicEvent) && dynamicEvent.selector === 'document') as IDynamicEventWithSelector[];\r\n    this.documentConfigListeners = _.map(documentConfigs, dynamicEvent => this.getOnDynamicEventHandler(dynamicEvent));\r\n    document.addEventListener('click', (event) => this.onDocumentClicked(event));\r\n\r\n    const beforeUnloadConfigs = _.filter(this.filteredEvents,\r\n      dynamicEvent => this.isBeforeUnloadEventType(dynamicEvent)) as IDynamicEventWithEventAction[];\r\n    this.beforeUnloadConfigListeners = _.map(beforeUnloadConfigs, dynamicEvent => this.getOnDynamicEventHandler(dynamicEvent));\r\n\r\n    window.addEventListener('beforeunload', () => this.onBeforeUnload());\r\n  };\r\n\r\n\r\n  private getConfiguration$(url: string) {\r\n    return this.httpClient\r\n      .get(url)\r\n      .pipe(\r\n        catchError(error => {\r\n          console.error('Unable to retrieve dynamic analytics configuration');\r\n          console.error(error);\r\n          return of(error);\r\n        })\r\n      );\r\n  }\r\n\r\n  private hasEventListener(element: Element, dynamicEvent: IDynamicEventWithSelector): boolean {\r\n    const eventRecord = this.getEventRecord(element);\r\n    return eventRecord?.eventsWithHandlers.some(eventWithHandle => eventWithHandle.dynamicEvent === dynamicEvent) ?? false;\r\n  }\r\n\r\n  private getEventRecord(element: Element): IEventRecord | undefined {\r\n    return this.eventRecords.find(entry => entry.element === element);\r\n  }\r\n\r\n  private cleanupEventRecords() {\r\n    const listenerRecordsToCleanUp = this.eventRecords.filter(record => !document.body.contains(record.element));\r\n    listenerRecordsToCleanUp.forEach(eventRecord => {\r\n      eventRecord.eventsWithHandlers.forEach(({dynamicEvent, eventHandler}) => {\r\n        eventRecord.element.removeEventListener(dynamicEvent.selector, eventHandler);\r\n      })\r\n    });\r\n    this.eventRecords = _.difference(this.eventRecords, listenerRecordsToCleanUp);\r\n  }\r\n\r\n  private addEventListener(element: Element, dynamicEvent: IDynamicEventWithSelector) {\r\n    let eventHandler = this.getOnDynamicEventHandler(dynamicEvent, element);\r\n    element.addEventListener(dynamicEvent.eventAction, eventHandler);\r\n\r\n    let eventRecord = this.getEventRecord(element);\r\n    if (_.isNil(eventRecord)) {\r\n      eventRecord = {\r\n        element,\r\n        eventsWithHandlers: []\r\n      };\r\n      this.eventRecords.push(eventRecord);\r\n    }\r\n    eventRecord.eventsWithHandlers.push({\r\n      dynamicEvent,\r\n      eventHandler\r\n    });\r\n  }\r\n\r\n  private getOnDynamicEventHandler(dynamicEvent: IDynamicEventWithEventAction, element?: Element): (event?: Event) => void {\r\n    return (event?: Event) => {\r\n      if (!_.isNil(element) && this.isDynamicEventWithSelector(dynamicEvent)) {\r\n        const elementsMatchingSelector = document.querySelectorAll(dynamicEvent.statusSelector ?? dynamicEvent.selector);\r\n        const doesElementMatchConfig = _.isNil(dynamicEvent.statusSelector) ? _.find(elementsMatchingSelector, existingElement => existingElement === element) : elementsMatchingSelector.length > 0;\r\n        if (!doesElementMatchConfig) {\r\n          this.log(`Element no longer matches selector. Cancelling event ${dynamicEvent.id}`);\r\n          return;\r\n        }\r\n      }\r\n      this.onSimpleOrSequenceEvent(dynamicEvent, event);\r\n    };\r\n  }\r\n\r\n  private log(text: string) {\r\n    if (this.loggingEnabled) {\r\n      console.log(text);\r\n    }\r\n  }\r\n\r\n  private onSimpleOrSequenceEvent(dynamicEvent: IDynamicEventWithEventAction | ISimpleEvent | ISequenceEvent, event?: Event) {\r\n    const isSimpleEvent = this.isSimpleEvent(dynamicEvent);\r\n    if (isSimpleEvent) {\r\n      if (_.isNil(event) || !this.isKeyboardEventType(dynamicEvent) || !dynamicEvent.isAlphaNumeric || this.isAlphaNumericKeyboardEvent(event)) {\r\n        const additionalData = this.getAdditionalEventData(dynamicEvent);\r\n        this.trackEvent(dynamicEvent, additionalData);\r\n      }\r\n    }\r\n\r\n    if (isSimpleEvent || this.isSequenceEvent(dynamicEvent)) {\r\n      this.onSequenceEvent(dynamicEvent, event);\r\n    }\r\n  }\r\n\r\n  private getAdditionalEventData(dynamicEvent: IDynamicEventBase): string | undefined {\r\n    let additionalData: string | undefined;\r\n    if (!_.isNil(dynamicEvent.additionalDataSelector)) {\r\n      const elementWithData = document.querySelector(dynamicEvent.additionalDataSelector);\r\n      if (!_.isNil(elementWithData)) {\r\n        if (elementWithData instanceof HTMLInputElement) {\r\n          additionalData = elementWithData.value;\r\n        } else {\r\n          additionalData = elementWithData.innerHTML\r\n        }\r\n      }\r\n    }\r\n    return additionalData;\r\n  }\r\n\r\n  private isAlphaNumericKeyboardEvent(event: Event): boolean {\r\n    return (event! as unknown as KeyboardEvent)?.key.length === 1;\r\n  }\r\n\r\n  private onDocumentClicked(event: Event) {\r\n    _.each(this.documentConfigListeners, listener => listener(event));\r\n    this.domChanged$.next();\r\n  }\r\n\r\n  private onBeforeUnload() {\r\n    _.each(this.beforeUnloadConfigListeners, listener => listener());\r\n  }\r\n\r\n  private formatDynamicEventString(event: DynamicEvent): string {\r\n    const isSimpleEvent = this.isSimpleEvent(event);\r\n    if (isSimpleEvent || this.isSequenceEvent(event)) {\r\n      let logDetails = `${event.id}. ${event.message}`;\r\n      if (!_.isNil(event.selector)) {\r\n        logDetails += `. ${event.selector}`;\r\n      }\r\n      if (isSimpleEvent) {\r\n        return `** Tracking simple event: ${logDetails}`;\r\n      } else if (this.isSequenceEvent(event)) {\r\n        return `Sequence event: ${logDetails} ${this.getSequenceProgress(event)}`;\r\n      }\r\n    }\r\n    return `** Tracking sequence: ${event.id}. ${event.message}`;\r\n  }\r\n\r\n  private getSequenceProgress(dynamicEvent: ISequenceEvent | ISequence): string {\r\n    const sequencesContainingThisEvent =\r\n      _.filter(this.filteredEvents, filteredDynamicEvent => this.isSequence(filteredDynamicEvent) &&\r\n        _.includes(filteredDynamicEvent.sequenceEvents, dynamicEvent.id)\r\n      ) as ISequence[];\r\n    const progress: string[] = [];\r\n    _.each(sequencesContainingThisEvent, sequence => {\r\n      if (_.includes(this.sequenceTracker[sequence.id], dynamicEvent.id)) {\r\n        progress.push(`Sequence ${sequence.id} = ${this.sequenceTracker[sequence.id].length}/${sequence.sequenceEvents.length}`);\r\n      }\r\n    });\r\n    return progress.join(', ');\r\n  }\r\n\r\n  private onSequenceEvent(dynamicEvent: ISimpleEvent | ISequenceEvent | ISequence, event?: Event) {\r\n    const sequencesCancelledByThisEvent =\r\n      _.filter(this.filteredEvents, filteredDynamicEvent => this.isSequence(filteredDynamicEvent) &&\r\n        _.includes(filteredDynamicEvent.cancelEvents, dynamicEvent.id)\r\n      ) as ISequence[];\r\n    if (!_.isEmpty(sequencesCancelledByThisEvent)) {\r\n      const resetSequences: ISequence[] = [];\r\n      _.each(sequencesCancelledByThisEvent, sequence => {\r\n        const tracker = this.sequenceTracker[sequence.id] = this.sequenceTracker[sequence.id] ?? [];\r\n        if (!_.isEmpty(tracker) && _.includes(sequence.cancelEvents, dynamicEvent.id) && !this.doesEventTargetTriggerSequenceEvent(sequence, event)) {\r\n          resetSequences.push(sequence);\r\n          this.resetSequence(sequence);\r\n          this.blockedSequenceIds.push(sequence.id);\r\n          setTimeout(() => {\r\n            _.pull(this.blockedSequenceIds, sequence.id);\r\n          }, 10);\r\n        }\r\n      });\r\n      if (!_.isEmpty(resetSequences)) {\r\n        this.log(`Sequence reset by event ${dynamicEvent.id}: ${resetSequences.map(sequence => sequence.id).join(',')}`);\r\n      }\r\n    }\r\n\r\n    const sequencesContainingThisEvent =\r\n      _.filter(this.filteredEvents, filteredDynamicEvent => {\r\n          return this.isSequence(filteredDynamicEvent) &&\r\n            _.includes(filteredDynamicEvent.sequenceEvents, dynamicEvent.id) &&\r\n            !_.includes(this.blockedSequenceIds, filteredDynamicEvent.id);\r\n        }\r\n      ) as ISequence[];\r\n    console.log(`sequencesContainingThisEvent: ${sequencesContainingThisEvent.map(s => s.id).join(', ')}`);\r\n    _.each(sequencesContainingThisEvent, sequence => {\r\n      setTimeout(() => {\r\n        _.pull(this.blockedSequenceIds, sequence.id);\r\n      }, 10);\r\n      const tracker = this.sequenceTracker[sequence.id] = this.sequenceTracker[sequence.id] ?? [];\r\n\r\n      if (sequence.sequenceEvents[tracker.length] === dynamicEvent.id) {\r\n        this.log(`Adding event ${dynamicEvent.id} to Sequence ${sequence.id} tracker`);\r\n        tracker.push(dynamicEvent.id);\r\n        this.blockedSequenceIds.push(sequence.id);\r\n        // this.logEvent(dynamicEvent);\r\n      }\r\n      if (tracker.length === sequence.sequenceEvents.length) {\r\n        this.log(`Sequence ${sequence.id} complete`);\r\n        this.trackAndResetSequence(sequence);\r\n        this.onSequenceEvent(sequence);\r\n      } else {\r\n        const nextEventIdInSequence = sequence.sequenceEvents[tracker.length];\r\n        const nextEventInSequence = _.find(this.filteredEvents, {id: nextEventIdInSequence});\r\n        if (_.isNil(nextEventInSequence)) {\r\n          throw new Error(`Error: Next event in sequence not found. Incorrect Id specified? Next event id ${nextEventIdInSequence}. Sequence ${sequence.id}`);\r\n        }\r\n        if (this.isTimedEvent(nextEventInSequence)) {\r\n          this.startTimedEventTimerForSequence(nextEventInSequence, sequence);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private startTimedEventTimerForSequence(dynamicEvent: ITimedEvent, sequence: ISequence) {\r\n    const timer = dynamicEvent.timeout;\r\n    if (timer > 0) {\r\n      const tracker = this.timedEventForSequenceTracker[sequence.id] = this.timedEventForSequenceTracker[sequence.id] ?? {};\r\n      if (!_.isNil(tracker[dynamicEvent.id])) {\r\n        throw new Error(`Timer event already exists for event ${dynamicEvent.id} in sequence ${sequence.id}`);\r\n      }\r\n      this.log(`Timer starting for event ${dynamicEvent.id} in sequence ${sequence.id}`);\r\n      tracker[dynamicEvent.id] = setTimeout(() => {\r\n        delete tracker[dynamicEvent.id];\r\n        this.log(`Timer complete for event ${dynamicEvent.id} in sequence ${sequence.id}`);\r\n        this.onSimpleOrSequenceEvent(dynamicEvent);\r\n      }, timer);\r\n    } else {\r\n      throw new Error(`Timeout value must be greater than 0 for event ${dynamicEvent.id}`);\r\n    }\r\n  }\r\n\r\n  private resetTimersForSequence(sequence: ISequence) {\r\n    const tracker = this.timedEventForSequenceTracker[sequence.id];\r\n    if (!_.isNil(tracker)) {\r\n      _.each(tracker, timeoutId => clearTimeout(timeoutId));\r\n    }\r\n    delete this.timedEventForSequenceTracker[sequence.id];\r\n  }\r\n\r\n  private resetSequence(sequence: ISequence) {\r\n    this.sequenceTracker[sequence.id] = [];\r\n    this.resetTimersForSequence(sequence);\r\n    this.log(`Cancelling sequence: ${sequence.id}. Message: ${sequence.message}`);\r\n  }\r\n\r\n  private trackAndResetSequence(sequence: ISequence) {\r\n    this.resetSequence(sequence);\r\n    if (sequence.isTrackable) {\r\n      const additionalData = this.getAdditionalEventData(sequence);\r\n      this.trackEvent(sequence, additionalData);\r\n    }\r\n  }\r\n\r\n  private trackEvent(event: DynamicEvent, additionalData: string | undefined) {\r\n    this.logEvent(event);\r\n    this.onEvent.next({\r\n      ...event,\r\n      additionalData\r\n    });\r\n  }\r\n\r\n  private logEvent(event: DynamicEvent) {\r\n    if (this.isSequence(event) && !event.isTrackable) {\r\n      return;\r\n    }\r\n    this.log(this.formatDynamicEventString(event));\r\n  }\r\n\r\n  private isSequenceEvent(event: DynamicEvent): event is ISequenceEvent {\r\n    return event.dynamicType === DynamicType.SequenceEvent;\r\n  }\r\n\r\n  private isSimpleEvent(event: DynamicEvent): event is ISimpleEvent {\r\n    return event.dynamicType === DynamicType.Simple;\r\n  }\r\n\r\n  private isDynamicEventWithEventType(event: DynamicEvent): event is IDynamicEventWithEventAction {\r\n    return (this.isSimpleEvent(event) || this.isSequenceEvent(event));\r\n  }\r\n\r\n  private isBeforeUnloadEventType(event: DynamicEvent): event is IBeforeUnloadEvent {\r\n    return (this.isSimpleEvent(event) || this.isSequenceEvent(event)) && event.eventAction === MiscellaneousEventAction.Beforeunload;\r\n  }\r\n\r\n  private isKeyboardEventType(event: DynamicEvent): event is IKeyboardEvent {\r\n    return (this.isSimpleEvent(event) || this.isSequenceEvent(event)) && event.eventAction in KeyboardEventAction;\r\n  }\r\n\r\n  private isDynamicEventWithSelector(event: DynamicEvent): event is IDynamicEventWithSelector {\r\n    return (this.isSimpleEvent(event) || this.isSequenceEvent(event)) && event.selector !== undefined;\r\n  }\r\n\r\n  private isSequence(event: DynamicEvent): event is ISequence {\r\n    return event.dynamicType === DynamicType.Sequence;\r\n  }\r\n\r\n  private isTimedEvent(event: DynamicEvent): event is ITimedEvent {\r\n    return this.isDynamicEventWithEventType(event) && event.eventAction === MiscellaneousEventAction.Timed;\r\n  }\r\n\r\n  private doesEventTargetTriggerSequenceEvent(sequence: ISequence, event?: Event) {\r\n    if (_.isNil(event)) {\r\n      return false;\r\n    }\r\n    const tracker = this.sequenceTracker[sequence.id];\r\n    if (_.isEmpty(tracker)) {\r\n      return;\r\n    }\r\n\r\n    const otherSequenceEventId = sequence.sequenceEvents[tracker.length - 1];\r\n    const sequenceEvent = _.find(this.filteredEvents, dynamicEvent => dynamicEvent.id === otherSequenceEventId)!;\r\n    if (!this.isDynamicEventWithSelector(sequenceEvent)) {\r\n      return;\r\n    }\r\n    const elementsMatchingSelector = document.querySelectorAll(sequenceEvent.statusSelector ?? sequenceEvent.selector);\r\n    const target = event.target as Node;\r\n    const isEventTargetWithinAnyMatchedElements = _.some(elementsMatchingSelector, element => element === target || element.contains(target));\r\n\r\n    return isEventTargetWithinAnyMatchedElements;\r\n  }\r\n\r\n  private validateEventConfigDefinition(eventConfigDefinition: IEventConfigDefinition) {\r\n    const uniqueEventIds = new Set<number>();\r\n    const uniqueSequenceEventIds = new Set<number>();\r\n    const uniqueCancelEventIds = new Set<number>();\r\n    _.each(eventConfigDefinition.configs, config => {\r\n      if (!this.versionFilterPredicate(config.minVersion, config.maxVersion)) {\r\n        return; // Skipping. Config doesn't apply to this version. Duplicate events etc. don't matter if a config is unused.\r\n      }\r\n      _.each(config.events, event => {\r\n        if (uniqueEventIds.has(event.id)) {\r\n          throw new Error('Event ids must be unique');\r\n        }\r\n        uniqueEventIds.add(event.id);\r\n\r\n        if (this.isSequence(event)) {\r\n          if (event.sequenceEvents.length < 2) {\r\n            throw new Error('Sequences must have at least 2 event ids');\r\n          }\r\n          event.sequenceEvents.forEach(id => {\r\n            if (id === event.id) {\r\n              throw new Error('Sequences cannot reference their own id as a sequence event');\r\n            }\r\n            uniqueSequenceEventIds.add(id);\r\n          });\r\n          event.cancelEvents.forEach(id => {\r\n            if (id === event.id) {\r\n              throw new Error('Sequences cannot reference their own id as a cancel event');\r\n            }\r\n            uniqueCancelEventIds.add(id);\r\n          });\r\n        }\r\n\r\n        if (this.isTimedEvent(event) && (event.timeout <= 0 || _.isNaN(event.timeout))) {\r\n          throw new Error('Timeout event must be a number greater than zero');\r\n        }\r\n\r\n        if (!_.isNil(event.additionalData)) {\r\n          throw new Error('Additional data must not be provided in the configuration. Use the `additionalDataSelector` to allow the service to find additional data in the DOM at event-time');\r\n        }\r\n      });\r\n    });\r\n\r\n    uniqueSequenceEventIds.forEach(id => {\r\n      if (!uniqueEventIds.has(id)) {\r\n        throw new Error('Sequence events must exist');\r\n      }\r\n    });\r\n    uniqueCancelEventIds.forEach(id => {\r\n      if (!uniqueEventIds.has(id)) {\r\n        throw new Error('Cancel events must exist');\r\n      }\r\n    });\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of dynamic-analytics\r\n */\r\n\r\nexport * from './lib/dynamic-analytics/dynamic-analytics.service';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}